# Description: Simple sfdx Bitbucket Pipeline script to demonstrate a quick and easy CI approach
# Author: Stuart Grieve

# Docker image to be used
image: node

# Maximum minutes a step can execute before timing out
options:
  max-time: 30

definitions:

  scripts:
    installSFDX: &installSFDX npm install @salesforce/cli --global
    defineTestClasses: &defineTestClasses export TESTCLASSES=$( cat specifyTestClasses.txt )
    printTestClasses: &printTestClasses echo $TESTCLASSES  
    decryptCertificate: &decryptCertificate openssl enc -nosalt -aes-256-cbc -d -in ./server.key.enc -out ./server.key -base64 -K $DECRYPTION_KEY -iv $DECRYPTION_IV
    #authoriseOrg: &authoriseOrg sfdx force:auth:jwt:grant --clientid $SF_SECRET_KEY_FOR_CLIENT_ID --username $SF_USERNAME --jwtkeyfile ./server.key --instanceurl https://test.salesforce.com
    authoriseOrg: &authoriseOrg sf org login jwt --client-id $SF_SECRET_KEY_FOR_CLIENT_ID -o $SF_USERNAME --jwt-key-file ./server.key --instance-url https://test.salesforce.com
    # deploy: &deploy sfdx force:source:deploy --manifest force-app/main/default/package.xml --loglevel error --testlevel RunSpecifiedTests -r $TESTCLASSES -u $SF_USERNAME
    deploy: &deploy sf project deploy start -x force-app/main/default/package.xml -l RunSpecifiedTests -t $TESTCLASSES -o $SF_USERNAME
    # logout: &logout sfdx force:auth:logout -p --targetusername $SF_USERNAME
    logout: &logout sf org logout -p -o $SF_USERNAME

pipelines:
  
  branches:
    
    master:
      - step:
          name: Deploying to Org
          script:
            # Install SFDX tool
            - *installSFDX
            # Specify the test classes to run before deploy
            - *defineTestClasses
            - *printTestClasses
            # Authorising environment
            - *decryptCertificate
            - *authoriseOrg
            # Deploy and run tests
            - *deploy
            - *logout

